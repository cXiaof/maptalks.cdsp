/*!
 * maptalks.cdsp v0.1.0-alpha.1
 * LICENSE : MIT
 * (c) 2016-2018 maptalks.org
 */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e(t.maptalks=t.maptalks||{})}(this,function(t){"use strict";function e(t,e){return t(e={exports:{}},e.exports),e.exports}var n={Point2D:e(function(t){function e(t,e){Object.defineProperties(this,{x:{value:void 0!==t?t:0,writable:!1,enumerable:!0,configurable:!1},y:{value:void 0!==e?e:0,writable:!1,enumerable:!0,configurable:!1}})}e.prototype.clone=function(){return new this.constructor(this.x,this.y)},e.prototype.add=function(t){return new this.constructor(this.x+t.x,this.y+t.y)},e.prototype.subtract=function(t){return new this.constructor(this.x-t.x,this.y-t.y)},e.prototype.multiply=function(t){return new this.constructor(this.x*t,this.y*t)},e.prototype.divide=function(t){return new this.constructor(this.x/t,this.y/t)},e.prototype.equals=function(t){return this.x===t.x&&this.y===t.y},e.prototype.precisionEquals=function(t,e){return Math.abs(this.x-t.x)<e&&Math.abs(this.y-t.y)<e},e.prototype.lerp=function(t,e){var n=1-e;return new this.constructor(this.x*n+t.x*e,this.y*n+t.y*e)},e.prototype.distanceFrom=function(t){var e=this.x-t.x,n=this.y-t.y;return Math.sqrt(e*e+n*n)},e.prototype.min=function(t){return new this.constructor(Math.min(this.x,t.x),Math.min(this.y,t.y))},e.prototype.max=function(t){return new this.constructor(Math.max(this.x,t.x),Math.max(this.y,t.y))},e.prototype.transform=function(t){return new this.constructor(t.a*this.x+t.c*this.y+t.e,t.b*this.x+t.d*this.y+t.f)},e.prototype.toString=function(){return"point("+this.x+","+this.y+")"},t.exports=e}),Vector2D:e(function(t){function n(t,e){Object.defineProperties(this,{x:{value:void 0!==t?t:0,writable:!1,enumerable:!0,configurable:!1},y:{value:void 0!==e?e:0,writable:!1,enumerable:!0,configurable:!1}})}n.fromPoints=function(t,e){return new n(e.x-t.x,e.y-t.y)},n.prototype.length=function(){return Math.sqrt(this.x*this.x+this.y*this.y)},n.prototype.magnitude=function(){return this.x*this.x+this.y*this.y},n.prototype.dot=function(t){return this.x*t.x+this.y*t.y},n.prototype.cross=function(t){return this.x*t.y-this.y*t.x},n.prototype.determinant=function(t){return this.x*t.y-this.y*t.x},n.prototype.unit=function(){return this.divide(this.length())},n.prototype.add=function(t){return new this.constructor(this.x+t.x,this.y+t.y)},n.prototype.subtract=function(t){return new this.constructor(this.x-t.x,this.y-t.y)},n.prototype.multiply=function(t){return new this.constructor(this.x*t,this.y*t)},n.prototype.divide=function(t){return new this.constructor(this.x/t,this.y/t)},n.prototype.angleBetween=function(t){var e=this.dot(t)/(this.length()*t.length());e=Math.max(-1,Math.min(e,1));var n=Math.acos(e);return this.cross(t)<0?-n:n},n.prototype.perp=function(){return new this.constructor(-this.y,this.x)},n.prototype.perpendicular=function(t){return this.subtract(this.project(t))},n.prototype.project=function(t){var e=this.dot(t)/t.dot(t);return t.multiply(e)},n.prototype.transform=function(t){return new this.constructor(t.a*this.x+t.c*this.y,t.b*this.x+t.d*this.y)},n.prototype.equals=function(t){return this.x===t.x&&this.y===t.y},n.prototype.precisionEquals=function(t,e){return Math.abs(this.x-t.x)<e&&Math.abs(this.y-t.y)<e},n.prototype.toString=function(){return"vector("+this.x+","+this.y+")"},t.exports=n}),Matrix2D:e(function(t){function o(t,e,n){Object.defineProperty(t,e,{value:n,writable:!1,enumerable:!0,configurable:!1})}function r(t,e,n,i,r,s){o(this,"a",void 0!==t?t:1),o(this,"b",void 0!==e?e:0),o(this,"c",void 0!==n?n:0),o(this,"d",void 0!==i?i:1),o(this,"e",void 0!==r?r:0),o(this,"f",void 0!==s?s:0)}o(r,"IDENTITY",new r(1,0,0,1,0,0)),o(r.IDENTITY,"isIdentity",function(){return!0}),r.translation=function(t,e){return new r(1,0,0,1,t,e)},r.scaling=function(t){return new r(t,0,0,t,0,0)},r.scalingAt=function(t,e){return new r(t,0,0,t,e.x-e.x*t,e.y-e.y*t)},r.nonUniformScaling=function(t,e){return new r(t,0,0,e,0,0)},r.nonUniformScalingAt=function(t,e,n){return new r(t,0,0,e,n.x-n.x*t,n.y-n.y*e)},r.rotation=function(t){var e=Math.cos(t),n=Math.sin(t);return new r(e,n,-n,e,0,0)},r.rotationAt=function(t,e){var n=Math.cos(t),i=Math.sin(t);return new r(n,i,-i,n,e.x-e.x*n+e.y*i,e.y-e.y*n-e.x*i)},r.rotationFromVector=function(t){var e=t.unit(),n=e.x,i=e.y;return new r(n,i,-i,n,0,0)},r.xFlip=function(){return new r(-1,0,0,1,0,0)},r.yFlip=function(){return new r(1,0,0,-1,0,0)},r.xSkew=function(t){return new r(1,0,Math.tan(t),1,0,0)},r.ySkew=function(t){return new r(1,Math.tan(t),0,1,0,0)},r.prototype.multiply=function(t){return this.isIdentity()?t:t.isIdentity()?this:new this.constructor(this.a*t.a+this.c*t.b,this.b*t.a+this.d*t.b,this.a*t.c+this.c*t.d,this.b*t.c+this.d*t.d,this.a*t.e+this.c*t.f+this.e,this.b*t.e+this.d*t.f+this.f)},r.prototype.inverse=function(){if(this.isIdentity())return this;var t=this.a*this.d-this.b*this.c;if(0===t)throw"Matrix is not invertible";var e=1/t,n=this.f*this.c-this.e*this.d,i=this.e*this.b-this.f*this.a;return new this.constructor(this.d*e,-this.b*e,-this.c*e,this.a*e,n*e,i*e)},r.prototype.translate=function(t,e){return new this.constructor(this.a,this.b,this.c,this.d,this.a*t+this.c*e+this.e,this.b*t+this.d*e+this.f)},r.prototype.scale=function(t){return new this.constructor(this.a*t,this.b*t,this.c*t,this.d*t,this.e,this.f)},r.prototype.scaleAt=function(t,e){var n=e.x-t*e.x,i=e.y-t*e.y;return new this.constructor(this.a*t,this.b*t,this.c*t,this.d*t,this.a*n+this.c*i+this.e,this.b*n+this.d*i+this.f)},r.prototype.scaleNonUniform=function(t,e){return new this.constructor(this.a*t,this.b*t,this.c*e,this.d*e,this.e,this.f)},r.prototype.scaleNonUniformAt=function(t,e,n){var i=n.x-t*n.x,r=n.y-e*n.y;return new this.constructor(this.a*t,this.b*t,this.c*e,this.d*e,this.a*i+this.c*r+this.e,this.b*i+this.d*r+this.f)},r.prototype.rotate=function(t){var e=Math.cos(t),n=Math.sin(t);return new this.constructor(this.a*e+this.c*n,this.b*e+this.d*n,this.a*-n+this.c*e,this.b*-n+this.d*e,this.e,this.f)},r.prototype.rotateAt=function(t,e){var n=Math.cos(t),i=Math.sin(t),r=e.x,s=e.y,o=this.a*n+this.c*i,a=this.b*n+this.d*i,y=this.c*n-this.a*i,c=this.d*n-this.b*i;return new this.constructor(o,a,y,c,(this.a-o)*r+(this.c-y)*s+this.e,(this.b-a)*r+(this.d-c)*s+this.f)},r.prototype.rotateFromVector=function(t){var e=t.unit(),n=e.x,i=e.y;return new this.constructor(this.a*n+this.c*i,this.b*n+this.d*i,this.a*-i+this.c*n,this.b*-i+this.d*n,this.e,this.f)},r.prototype.flipX=function(){return new this.constructor(-this.a,-this.b,this.c,this.d,this.e,this.f)},r.prototype.flipY=function(){return new this.constructor(this.a,this.b,-this.c,-this.d,this.e,this.f)},r.prototype.skewX=function(t){var e=Math.tan(t);return new this.constructor(this.a,this.b,this.c+this.a*e,this.d+this.b*e,this.e,this.f)},r.prototype.skewY=function(t){var e=Math.tan(t);return new this.constructor(this.a+this.c*e,this.b+this.d*e,this.c,this.d,this.e,this.f)},r.prototype.isIdentity=function(){return 1===this.a&&0===this.b&&0===this.c&&1===this.d&&0===this.e&&0===this.f},r.prototype.isInvertible=function(){return this.a*this.d-this.b*this.c!=0},r.prototype.getScale=function(){return{scaleX:Math.sqrt(this.a*this.a+this.c*this.c),scaleY:Math.sqrt(this.b*this.b+this.d*this.d)}},r.prototype.getDecomposition=function(){var t=.5*(this.a+this.d),e=.5*(this.a-this.d),n=.5*(this.b+this.c),i=.5*(this.b-this.c),r=Math.sqrt(t*t+i*i),s=Math.sqrt(e*e+n*n),o=r+s,a=r-s,y=Math.atan2(n,e),c=Math.atan2(i,t),u=.5*(c-y),h=.5*(c+y);return{translation:new this.constructor(1,0,0,1,this.e,this.f),rotation:this.constructor.IDENTITY.rotate(h),scale:new this.constructor(o,0,0,a,0,0),rotation0:this.constructor.IDENTITY.rotate(u)}},r.prototype.equals=function(t){return this.a===t.a&&this.b===t.b&&this.c===t.c&&this.d===t.d&&this.e===t.e&&this.f===t.f},r.prototype.precisionEquals=function(t,e){return Math.abs(this.a-t.a)<e&&Math.abs(this.b-t.b)<e&&Math.abs(this.c-t.c)<e&&Math.abs(this.d-t.d)<e&&Math.abs(this.e-t.e)<e&&Math.abs(this.f-t.f)<e},r.prototype.toString=function(){return"matrix("+[this.a,this.b,this.c,this.d,this.e,this.f].join(",")+")"},t.exports=r})},r=e(function(t){function f(){this.init(arguments)}f.TOLERANCE=1e-6,f.ACCURACY=15,f.interpolate=function(t,e,n,i,r){if(t.constructor!==Array||e.constructor!==Array)throw new Error("Polynomial.interpolate: xs and ys must be arrays");if(isNaN(n)||isNaN(i)||isNaN(r))throw new Error("Polynomial.interpolate: n, offset, and x must be numbers");for(var s=0,o=0,a=new Array(n),y=new Array(n),c=0,u=Math.abs(r-t[i]),h=0;h<n;h++){var p=Math.abs(r-t[i+h]);p<u&&(c=h,u=p),a[h]=y[h]=e[i+h]}s=e[i+c],c--;for(var l=1;l<n;l++){for(h=0;h<n-l;h++){var x=t[i+h]-r,f=t[i+h+l]-r,d=a[h+1]-y[h],w=x-f;if(0==w)throw new Error("Unable to interpolate polynomial. Two numbers in n were identical (to within roundoff)");w=d/w,y[h]=f*w,a[h]=x*w}s+=o=2*(c+1)<n-l?a[c+1]:y[c--]}return{y:s,dy:o}},f.prototype.init=function(t){this.coefs=new Array;for(var e=t.length-1;0<=e;e--)this.coefs.push(t[e]);this._variable="t",this._s=0},f.prototype.eval=function(t){if(isNaN(t))throw new Error("Polynomial.eval: parameter must be a number");for(var e=0,n=this.coefs.length-1;0<=n;n--)e=e*t+this.coefs[n];return e},f.prototype.add=function(t){for(var e=new f,n=this.getDegree(),i=t.getDegree(),r=Math.max(n,i),s=0;s<=r;s++){var o=s<=n?this.coefs[s]:0,a=s<=i?t.coefs[s]:0;e.coefs[s]=o+a}return e},f.prototype.multiply=function(t){for(var e=new f,n=0;n<=this.getDegree()+t.getDegree();n++)e.coefs.push(0);for(n=0;n<=this.getDegree();n++)for(var i=0;i<=t.getDegree();i++)e.coefs[n+i]+=this.coefs[n]*t.coefs[i];return e},f.prototype.divide_scalar=function(t){for(var e=0;e<this.coefs.length;e++)this.coefs[e]/=t},f.prototype.simplify=function(t){void 0===t&&(t=1e-12);for(var e=this.getDegree();0<=e&&Math.abs(this.coefs[e])<=t;e--)this.coefs.pop()},f.prototype.bisection=function(t,e){var n,i=this.eval(t),r=this.eval(e);if(Math.abs(i)<=f.TOLERANCE)n=t;else if(Math.abs(r)<=f.TOLERANCE)n=e;else if(i*r<=0)for(var s=Math.log(e-t),o=Math.LN10*f.ACCURACY,a=Math.ceil((s+o)/Math.LN2),y=0;y<a;y++){n=.5*(t+e);var c=this.eval(n);if(Math.abs(c)<=f.TOLERANCE)break;c*i<0?(e=n,r=c):(t=n,i=c)}return n},f.prototype.toString=function(){for(var t=new Array,e=new Array,n=this.coefs.length-1;0<=n;n--){var i=Math.round(1e3*this.coefs[n])/1e3;if(0!=i){var r=i<0?" - ":" + ";i=Math.abs(i),0<n&&(1==i?i=this._variable:i+=this._variable),1<n&&(i+="^"+n),e.push(r),t.push(i)}}e[0]=" + "==e[0]?"":"-";var s="";for(n=0;n<t.length;n++)s+=e[n]+t[n];return s},f.prototype.trapezoid=function(t,e,n){if(isNaN(t)||isNaN(e)||isNaN(n))throw new Error("Polynomial.trapezoid: parameters must be numbers");var i=e-t;if(1==n){var r=this.eval(t),s=this.eval(e);this._s=.5*i*(r+s)}else{for(var o=1<<n-2,a=i/o,y=t+.5*a,c=0,u=0;u<o;u++)c+=this.eval(y),y+=a;this._s=.5*(this._s+i*c/o)}if(isNaN(this._s))throw new Error("Polynomial.trapezoid: this._s is NaN");return this._s},f.prototype.simpson=function(t,e){if(isNaN(t)||isNaN(e))throw new Error("Polynomial.simpson: parameters must be numbers");for(var n=e-t,i=.5*n*(this.eval(t)+this.eval(e)),r=i,s=4*i/3,o=s,a=i,y=1,c=2;c<=20;c++){for(var u=n/y,h=t+.5*u,p=0,l=1;l<=y;l++)p+=this.eval(h),h+=u;if(s=(4*(i=r=.5*(r+n*p/y))-a)/3,Math.abs(s-o)<1e-7*Math.abs(o))break;o=s,a=i,y<<=1}return s},f.prototype.romberg=function(t,e){if(isNaN(t)||isNaN(e))throw new Error("Polynomial.romberg: parameters must be numbers");for(var n=new Array(21),i=new Array(21),r={y:0,dy:0},s=i[0]=1;s<=20&&(n[s-1]=this.trapezoid(t,e,s),!(3<=s&&(r=f.interpolate(i,n,3,s-3,0),Math.abs(r.dy)<=1e-6*r.y)));s++)n[s]=n[s-1],i[s]=.25*i[s-1];return r.y},f.prototype.getDegree=function(){return this.coefs.length-1},f.prototype.getDerivative=function(){for(var t=new f,e=1;e<this.coefs.length;e++)t.coefs.push(e*this.coefs[e]);return t},f.prototype.getRoots=function(){var t;switch(this.simplify(),this.getDegree()){case 0:t=[];break;case 1:t=this.getLinearRoot();break;case 2:t=this.getQuadraticRoots();break;case 3:t=this.getCubicRoots();break;case 4:t=this.getQuarticRoots();break;default:t=[]}return t},f.prototype.getRootsInInterval=function(t,e){var n,r=new Array;if(1==this.getDegree())null!=(n=this.bisection(t,e))&&r.push(n);else{var s=this.getDerivative().getRootsInInterval(t,e);if(0<s.length){for(null!=(n=this.bisection(t,s[0]))&&r.push(n),i=0;i<=s.length-2;i++)null!=(n=this.bisection(s[i],s[i+1]))&&r.push(n);null!=(n=this.bisection(s[s.length-1],e))&&r.push(n)}else null!=(n=this.bisection(t,e))&&r.push(n)}return r},f.prototype.getLinearRoot=function(){var t=[],e=this.coefs[1];return 0!=e&&t.push(-this.coefs[0]/e),t},f.prototype.getQuadraticRoots=function(){var t=[];if(2==this.getDegree()){var e=this.coefs[2],n=this.coefs[1]/e,i=n*n-4*(this.coefs[0]/e);if(0<i){var r=Math.sqrt(i);t.push(.5*(-n+r)),t.push(.5*(-n-r))}else 0==i&&t.push(.5*-n)}return t},f.prototype.getCubicRoots=function(){var t=[];if(3==this.getDegree()){var e=this.coefs[3],n=this.coefs[2]/e,i=this.coefs[1]/e,r=(3*i-n*n)/3,s=(2*n*n*n-9*i*n+27*(this.coefs[0]/e))/27,o=n/3,a=s*s/4+r*r*r/27,y=s/2,c=this.zeroErrorEstimate();if(Math.abs(a)<=c&&(a=0),0<a){var u,h=Math.sqrt(a);u=0<=(w=-y+h)?Math.pow(w,1/3):-Math.pow(-w,1/3),0<=(w=-y-h)?u+=Math.pow(w,1/3):u-=Math.pow(-w,1/3),t.push(u-o)}else if(a<0){var p=Math.sqrt(-r/3),l=Math.atan2(Math.sqrt(-a),-y)/3,x=Math.cos(l),f=Math.sin(l),d=Math.sqrt(3);t.push(2*p*x-o),t.push(-p*(x+d*f)-o),t.push(-p*(x-d*f)-o)}else{var w;w=0<=y?-Math.pow(y,1/3):Math.pow(-y,1/3),t.push(2*w-o),t.push(-w-o)}}return t};var b=function(t){return"number"==typeof t?t?t<0?-1:1:t==t?t:NaN:NaN};f.prototype.getQuarticRoots=function(){var t=[],e=this.getDegree();if(4==e){var n=new f;n.coefs=this.coefs.slice(),n.divide_scalar(n.coefs[e]);Math.abs(n.coefs[0])<10*1e-15*Math.abs(n.coefs[3])&&(n.coefs[0]=0);var i,r=n.getDerivative(),s=r.getRoots().sort(function(t,e){return t-e}),o=[],a=s.length-1,y=this.bounds();maxabsX=Math.max(Math.abs(y.minX),Math.abs(y.maxX));var c=this.zeroErrorEstimate(maxabsX);for(i=0;i<=a;i++)o.push(n.eval(s[i]));for(i=0;i<=a;i++)Math.abs(o[i])<c&&(o[i]=0);i=0;var u=Math.max(.1*(y.maxX-y.minX)/e,1e-15),h=[],p=[];if(-1<a){for(0!=o[0]?b(o[0])!=b(n.eval(s[0]-u)-o[0])&&(h.push(s[0]-u),p.push([y.minX,s[0]])):(t.push(s[0],s[0]),i++);i<a;i++)0==o[i+1]?(t.push(s[i+1],s[i+1]),i++):b(o[i])!=b(o[i+1])&&(h.push((s[i]+s[i+1])/2),p.push([s[i],s[i+1]]));0!=o[a]&&b(o[a])!=b(n.eval(s[a]+u)-o[a])&&(h.push(s[a]+u),p.push([s[a],y.maxX]))}var l=function(t){return n.eval(t)},x=function(t){return r.eval(t)};if(0<h.length)for(i=0;i<h.length;i++)h[i]=f.newton_secant_bisection(h[i],l,x,32,p[i][0],p[i][1]);t=t.concat(h)}return t},f.prototype.zeroErrorEstimate=function(r){var t=this;if(void 0===r){var e=t.bounds();r=Math.max(Math.abs(e.minX),Math.abs(e.maxX))}if(r<.001)return 2*Math.abs(t.eval(1e-15));var n=t.coefs.length-1,s=t.coefs[n];return 10*1e-15*t.coefs.reduce(function(t,e,n){var i=e/s*Math.pow(r,n);return t<i?i:t},0)},f.prototype.bounds_UpperReal_Fujiwara=function(){var e=this.coefs,n=e.length-1,i=e[n];1!=i&&(e=this.coefs.map(function(t){return t/i}));var r,t=e.map(function(t,e){return e<n?Math.pow(Math.abs(0==e?t/2:t),1/(n-e)):t}),s=function(t,e,n){return r(n)&&(t.max<e?(t.nearmax=t.max,t.max=e):t.nearmax<e&&(t.nearmax=e)),t};r=function(t){return t<n&&e[t]<0};var o=t.reduce(s,{max:0,nearmax:0});return r=function(t){return t<n&&(n%2==t%2?e[t]<0:0<e[t])},{negX:-2*t.reduce(s,{max:0,nearmax:0}).max,posX:2*o.max}},f.prototype.bounds_LowerReal_Fujiwara=function(){var t=new f;t.coefs=this.coefs.slice().reverse();var e=t.bounds_UpperReal_Fujiwara();return e.negX=1/e.negX,e.posX=1/e.posX,e},f.prototype.bounds=function(){var t=this.bounds_UpperReal_Fujiwara(),e={minX:t.negX,maxX:t.posX};return 0===t.negX&&0===t.posX||(0===t.negX?e.minX=this.bounds_LowerReal_Fujiwara().posX:0===t.posX&&(e.maxX=this.bounds_LowerReal_Fujiwara().negX),e.minX>e.maxX&&(e.minX=e.maxX=0)),e},f.newton_secant_bisection=function(t,e,n,i,r,s){var o,a,c,u,h,p,l=0,x=0;o=t;var f=Math.pow(10,-14),d="number"==typeof r&&"number"==typeof s;if(d){if(s<r)throw new Error("newton root finding: min must be greater than max");if(h=e(r),p=e(s),b(h)==b(p))throw new Error("newton root finding: y values of bounds must be of opposite sign")}var w,v=function(){return Math.abs(c)<=f*Math.abs(o)||x==o-c-o};for(w=0;w<i;w++){if(0==(a=n(o))){if(0==l)throw new Error("newton root finding: df(x) is zero");a=l}if(l=a,y=e(o),c=y/a,u=o-c,v())break;if(d){if(b(y)==b(p))s=o,p=y;else{if(b(y)!=b(h)){o=u;break}r=o,h=y}if(u<r||s<u){if(b(h)==b(p))break;var m=p-h,g=s-r;if(c=0==m?o-(r+.5*g):50<Math.abs(m/Math.min(h,p))?o-(r+g*(.5+(Math.abs(h)<Math.abs(p)?-.25:.25))):o-(r-h/m*g),u=o-c,v())break}}x=o-u,o=u}return o},t.exports=f}),s=e(function(t){var e=r;function n(){this.init(arguments)}n.VERSION=1,((n.prototype=new e).constructor=n).superclass=e.prototype,n.prototype.eval=function(t){var e=n.superclass.eval.call(this,t);if(Math.abs(e)<1e-7&&(e=0),e<0)throw new Error("SqrtPolynomial.eval: cannot take square root of negative number");return Math.sqrt(e)},n.prototype.toString=function(){return"sqrt("+n.superclass.toString.call(this)+")"},t.exports=n}),o={Polynomial:r,SqrtPolynomial:s},a=(e(function(t){var T=n.Point2D,tt=n.Vector2D,et=o.Polynomial;function s(t){var e=t.slice();return e.push(t[0]),e}function nt(t){this.init(t)}nt.prototype.init=function(t){this.status=t,this.points=new Array},nt.prototype.appendPoint=function(t){this.points.push(t)},nt.prototype.appendPoints=function(t){this.points=this.points.concat(t)},nt.intersect=function(t,e){var n;if(null!=t&&null!=e)if("Path"==t.name)n=nt.intersectPathShape(t,e);else if("Path"==e.name)n=nt.intersectPathShape(e,t);else{var i,r;if(t.name<e.name?(i="intersect"+t.name+e.name,r=t.args.concat(e.args)):(i="intersect"+e.name+t.name,r=e.args.concat(t.args)),!(i in nt))throw new Error("Intersection not available: "+i);n=nt[i].apply(null,r)}else n=new nt("No Intersection");return n},nt.intersectPathShape=function(t,e){for(var n=new nt("No Intersection"),i=t.args.length,r=0;r<i;r++){var s=t.args[r],o=nt.intersect(s,e);n.appendPoints(o.points)}return 0<n.points.length&&(n.status="Intersection"),n},nt.intersectBezier2Bezier2=function(t,e,n,i,r,s){var o,a,y,c,u,h,p=new nt("No Intersection");l=e.multiply(-2),o=t.add(l.add(n)),l=t.multiply(-2),x=e.multiply(2),a=l.add(x),y=new T(t.x,t.y),l=r.multiply(-2),c=i.add(l.add(s)),l=i.multiply(-2),x=r.multiply(2),u=l.add(x),h=new T(i.x,i.y);for(var l=o.x*a.y-a.x*o.y,x=c.x*a.y-a.x*c.y,f=u.x*a.y-a.x*u.y,d=a.x*(y.y-h.y)+a.y*(-y.x+h.x),w=c.x*o.y-o.x*c.y,v=u.x*o.y-o.x*u.y,m=o.x*(y.y-h.y)+o.y*(-y.x+h.x),g=new et(-w*w,-2*w*v,l*x-v*v-2*w*m,l*f-2*v*m,l*d-m*m).getRoots(),b=0;b<g.length;b++){var P=g[b];if(0<=P&&P<=1){var M=new et(o.x,a.x,y.x-h.x-P*u.x-P*P*c.x);M.simplify();var I=M.getRoots(),N=new et(o.y,a.y,y.y-h.y-P*u.y-P*P*c.y);N.simplify();var R=N.getRoots();if(0<I.length&&0<R.length){t:for(var L=0;L<I.length;L++){var E=I[L];if(0<=E&&E<=1)for(var z=0;z<R.length;z++)if(Math.abs(E-R[z])<1e-4){p.points.push(c.multiply(P*P).add(u.multiply(P).add(h)));break t}}}}}return 0<p.points.length&&(p.status="Intersection"),p},nt.intersectBezier2Bezier3=function(t,e,n,i,r,s,o){var a,y,c,u,h,p,l,x,f,d,w,v=new nt("No Intersection");a=e.multiply(-2),h=t.add(a.add(n)),a=t.multiply(-2),y=e.multiply(2),p=a.add(y),l=new T(t.x,t.y),a=i.multiply(-1),y=r.multiply(3),c=s.multiply(-3),u=a.add(y.add(c.add(o))),x=new tt(u.x,u.y),a=i.multiply(3),y=r.multiply(-6),c=s.multiply(3),u=a.add(y.add(c)),f=new tt(u.x,u.y),a=i.multiply(-3),y=r.multiply(3),c=a.add(y),d=new tt(c.x,c.y),w=new tt(i.x,i.y);for(var m=l.x*l.x,g=l.y*l.y,b=p.x*p.x,P=p.y*p.y,M=h.x*h.x,I=h.y*h.y,N=w.x*w.x,R=w.y*w.y,L=d.x*d.x,E=d.y*d.y,z=f.x*f.x,B=f.y*f.y,C=x.x*x.x,X=x.y*x.y,_=new et(-2*h.x*h.y*x.x*x.y+M*X+I*C,-2*h.x*h.y*f.x*x.y-2*h.x*h.y*f.y*x.x+2*I*f.x*x.x+2*M*f.y*x.y,-2*h.x*d.x*h.y*x.y-2*h.x*h.y*d.y*x.x-2*h.x*h.y*f.x*f.y+2*d.x*I*x.x+I*z+M*(2*d.y*x.y+B),2*l.x*h.x*h.y*x.y+2*l.y*h.x*h.y*x.x+p.x*p.y*h.x*x.y+p.x*p.y*h.y*x.x-2*w.x*h.x*h.y*x.y-2*h.x*w.y*h.y*x.x-2*h.x*d.x*h.y*f.y-2*h.x*h.y*d.y*f.x-2*l.x*I*x.x-2*l.y*M*x.y+2*w.x*I*x.x+2*d.x*I*f.x-P*h.x*x.x-b*h.y*x.y+M*(2*w.y*x.y+2*d.y*f.y),2*l.x*h.x*h.y*f.y+2*l.y*h.x*h.y*f.x+p.x*p.y*h.x*f.y+p.x*p.y*h.y*f.x-2*w.x*h.x*h.y*f.y-2*h.x*w.y*h.y*f.x-2*h.x*d.x*h.y*d.y-2*l.x*I*f.x-2*l.y*M*f.y+2*w.x*I*f.x-P*h.x*f.x-b*h.y*f.y+L*I+M*(2*w.y*f.y+E),2*l.x*h.x*h.y*d.y+2*l.y*h.x*d.x*h.y+p.x*p.y*h.x*d.y+p.x*p.y*d.x*h.y-2*w.x*h.x*h.y*d.y-2*h.x*w.y*d.x*h.y-2*l.x*d.x*I-2*l.y*M*d.y+2*w.x*d.x*I-P*h.x*d.x-b*h.y*d.y+2*M*w.y*d.y,-2*l.x*l.y*h.x*h.y-l.x*p.x*p.y*h.y-l.y*p.x*p.y*h.x+2*l.x*h.x*w.y*h.y+2*l.y*w.x*h.x*h.y+p.x*w.x*p.y*h.y+p.x*p.y*h.x*w.y-2*w.x*h.x*w.y*h.y-2*l.x*w.x*I+l.x*P*h.x+l.y*b*h.y-2*l.y*M*w.y-w.x*P*h.x-b*w.y*h.y+m*I+g*M+N*I+M*R).getRootsInInterval(0,1),D=0;D<_.length;D++){var q=_[D],A=new et(h.x,p.x,l.x-w.x-q*d.x-q*q*f.x-q*q*q*x.x).getRoots(),O=new et(h.y,p.y,l.y-w.y-q*d.y-q*q*f.y-q*q*q*x.y).getRoots();if(0<A.length&&0<O.length){t:for(var k=0;k<A.length;k++){var j=A[k];if(0<=j&&j<=1)for(var S=0;S<O.length;S++)if(Math.abs(j-O[S])<1e-4){v.points.push(x.multiply(q*q*q).add(f.multiply(q*q).add(d.multiply(q).add(w))));break t}}}}return 0<v.points.length&&(v.status="Intersection"),v},nt.intersectBezier2Circle=function(t,e,n,i,r){return nt.intersectBezier2Ellipse(t,e,n,i,r,r)},nt.intersectBezier2Ellipse=function(t,e,n,i,r,s){var o,a,y,c,u,h=new nt("No Intersection");o=e.multiply(-2),y=t.add(o.add(n)),o=t.multiply(-2),a=e.multiply(2),c=o.add(a),u=new T(t.x,t.y);for(var p=r*r,l=s*s,x=new et(l*y.x*y.x+p*y.y*y.y,2*(l*y.x*c.x+p*y.y*c.y),l*(2*y.x*u.x+c.x*c.x)+p*(2*y.y*u.y+c.y*c.y)-2*(l*i.x*y.x+p*i.y*y.y),2*(l*c.x*(u.x-i.x)+p*c.y*(u.y-i.y)),l*(u.x*u.x+i.x*i.x)+p*(u.y*u.y+i.y*i.y)-2*(l*i.x*u.x+p*i.y*u.y)-p*l).getRoots(),f=0;f<x.length;f++){var d=x[f];0<=d&&d<=1&&h.points.push(y.multiply(d*d).add(c.multiply(d).add(u)))}return 0<h.points.length&&(h.status="Intersection"),h},nt.intersectBezier2Line=function(t,e,n,i,r){var s,o,a,y,c,u,h,p=i.min(r),l=i.max(r),x=new nt("No Intersection");s=e.multiply(-2),a=t.add(s.add(n)),s=t.multiply(-2),o=e.multiply(2),y=s.add(o),c=new T(t.x,t.y),h=new tt(i.y-r.y,r.x-i.x),u=i.x*r.y-r.x*i.y,roots=new et(h.dot(a),h.dot(y),h.dot(c)+u).getRoots();for(var f=0;f<roots.length;f++){var d=roots[f];if(0<=d&&d<=1){var w=t.lerp(e,d),v=e.lerp(n,d),m=w.lerp(v,d);i.x==r.x?p.y<=m.y&&m.y<=l.y&&(x.status="Intersection",x.appendPoint(m)):i.y==r.y?p.x<=m.x&&m.x<=l.x&&(x.status="Intersection",x.appendPoint(m)):p.x<=m.x&&m.x<=l.x&&p.y<=m.y&&m.y<=l.y&&(x.status="Intersection",x.appendPoint(m))}}return x},nt.intersectBezier2Polygon=function(t,e,n,i){return nt.intersectBezier2Polyline(t,e,n,s(i))},nt.intersectBezier2Polyline=function(t,e,n,i){for(var r=new nt("No Intersection"),s=i.length,o=0;o<s-1;o++){var a=i[o],y=i[o+1],c=nt.intersectBezier2Line(t,e,n,a,y);r.appendPoints(c.points)}return 0<r.points.length&&(r.status="Intersection"),r},nt.intersectBezier2Rectangle=function(t,e,n,i,r){var s=i.min(r),o=i.max(r),a=new T(o.x,s.y),y=new T(s.x,o.y),c=nt.intersectBezier2Line(t,e,n,s,a),u=nt.intersectBezier2Line(t,e,n,a,o),h=nt.intersectBezier2Line(t,e,n,o,y),p=nt.intersectBezier2Line(t,e,n,y,s),l=new nt("No Intersection");return l.appendPoints(c.points),l.appendPoints(u.points),l.appendPoints(h.points),l.appendPoints(p.points),0<l.points.length&&(l.status="Intersection"),l},nt.intersectBezier3Bezier3=function(t,e,n,i,r,s,o,a){var y,c,u,h,p,l,x,f,d,w=new nt("No Intersection");v=t.multiply(-1),m=e.multiply(3),y=n.multiply(-3),I=v.add(m.add(y.add(i))),c=new tt(I.x,I.y),v=t.multiply(3),m=e.multiply(-6),y=n.multiply(3),I=v.add(m.add(y)),u=new tt(I.x,I.y),v=t.multiply(-3),m=e.multiply(3),y=v.add(m),h=new tt(y.x,y.y),p=new tt(t.x,t.y),v=r.multiply(-1),m=s.multiply(3),y=o.multiply(-3),I=v.add(m.add(y.add(a))),l=new tt(I.x,I.y),v=r.multiply(3),m=s.multiply(-6),y=o.multiply(3),I=v.add(m.add(y)),x=new tt(I.x,I.y),v=r.multiply(-3),m=s.multiply(3),y=v.add(m),f=new tt(y.x,y.y),d=new tt(r.x,r.y);var v=c.x*u.y-u.x*c.y,m=c.x*h.y-h.x*c.y,g=c.x*p.y-p.x*c.y+d.x*c.y-c.x*d.y,b=f.x*c.y-c.x*f.y,P=x.x*c.y-c.x*x.y,M=l.x*c.y-c.x*l.y,I=c.x*h.y-h.x*c.y,N=c.x*p.y+u.x*h.y-h.x*u.y-p.x*c.y+d.x*c.y-c.x*d.y,R=f.x*c.y-c.x*f.y,L=x.x*c.y-c.x*x.y,E=l.x*c.y-c.x*l.y,z=u.x*p.y-p.x*u.y+d.x*u.y-u.x*d.y,B=f.x*u.y-u.x*f.y,C=x.x*u.y-u.x*x.y,X=l.x*u.y-u.x*l.y,_=c.x*p.y-p.x*c.y+d.x*c.y-c.x*d.y,D=f.x*c.y-c.x*f.y,q=x.x*c.y-c.x*x.y,A=l.x*c.y-c.x*l.y,O=u.x*p.y-p.x*u.y+d.x*u.y-u.x*d.y,k=f.x*u.y-u.x*f.y,j=x.x*u.y-u.x*x.y,S=l.x*u.y-u.x*l.y,T=h.x*p.y-p.x*h.y+d.x*h.y-h.x*d.y,F=f.x*h.y-h.x*f.y,U=x.x*h.y-h.x*x.y,Y=l.x*h.y-h.x*l.y,V=new et(-M*E*A,-M*E*q-M*L*A-P*E*A,-M*E*D-M*L*q-P*E*q-M*R*A-P*L*A-b*E*A,-M*E*_-M*L*D-P*E*D-M*R*q-P*L*q-b*E*q-M*N*A-P*R*A-b*L*A-g*E*A+m*X*A+M*I*S-v*X*S+v*E*Y,-M*L*_-P*E*_-M*R*D-P*L*D-b*E*D-M*N*q-P*R*q-b*L*q-g*E*q+m*X*q-P*N*A-b*R*A-g*L*A+m*C*A+M*I*j-v*X*j+P*I*S-v*C*S+v*E*U+v*L*Y,-M*R*_-P*L*_-b*E*_-M*N*D-P*R*D-b*L*D-g*E*D+m*X*D-P*N*q-b*R*q-g*L*q+m*C*q-b*N*A-g*R*A+m*B*A+M*I*k-v*X*k+P*I*j-v*C*j+b*I*S-v*B*S+v*E*F+v*L*U+v*R*Y,-M*N*_-P*R*_-b*L*_-g*E*_+m*X*_-P*N*D-b*R*D-g*L*D+m*C*D-b*N*q-g*R*q+m*B*q-g*N*A+m*z*A+M*I*O-v*X*O+P*I*k-v*C*k+b*I*j-v*B*j+g*I*S-v*z*S+v*E*T+v*L*F+v*R*U-m*I*Y+v*N*Y,-P*N*_-b*R*_-g*L*_+m*C*_-b*N*D-g*R*D+m*B*D-g*N*q+m*z*q+P*I*O-v*C*O+b*I*k-v*B*k+g*I*j-v*z*j+v*L*T+v*R*F-m*I*U+v*N*U,-b*N*_-g*R*_+m*B*_-g*N*D+m*z*D+b*I*O-v*B*O+g*I*k-v*z*k+v*R*T-m*I*F+v*N*F,-g*N*_+m*z*_+g*I*O-v*z*O-m*I*T+v*N*T);V.simplify();for(var Q=V.getRootsInInterval(0,1),G=0;G<Q.length;G++){var H=Q[G],J=new et(c.x,u.x,h.x,p.x-d.x-H*f.x-H*H*x.x-H*H*H*l.x);J.simplify(),xRoots=J.getRoots();var K=new et(c.y,u.y,h.y,p.y-d.y-H*f.y-H*H*x.y-H*H*H*l.y);if(K.simplify(),yRoots=K.getRoots(),0<xRoots.length&&0<yRoots.length){t:for(var W=0;W<xRoots.length;W++){var Z=xRoots[W];if(0<=Z&&Z<=1)for(var $=0;$<yRoots.length;$++)if(Math.abs(Z-yRoots[$])<1e-4){w.points.push(l.multiply(H*H*H).add(x.multiply(H*H).add(f.multiply(H).add(d))));break t}}}}return 0<w.points.length&&(w.status="Intersection"),w},nt.intersectBezier3Circle=function(t,e,n,i,r,s){return nt.intersectBezier3Ellipse(t,e,n,i,r,s,s)},nt.intersectBezier3Ellipse=function(t,e,n,i,r,s,o){var a,y,c,u,h,p,l,x,f=new nt("No Intersection");a=t.multiply(-1),y=e.multiply(3),c=n.multiply(-3),u=a.add(y.add(c.add(i))),h=new tt(u.x,u.y),a=t.multiply(3),y=e.multiply(-6),c=n.multiply(3),u=a.add(y.add(c)),p=new tt(u.x,u.y),a=t.multiply(-3),y=e.multiply(3),c=a.add(y),l=new tt(c.x,c.y),x=new tt(t.x,t.y);for(var d=s*s,w=o*o,v=new et(h.x*h.x*w+h.y*h.y*d,2*(h.x*p.x*w+h.y*p.y*d),2*(h.x*l.x*w+h.y*l.y*d)+p.x*p.x*w+p.y*p.y*d,2*h.x*w*(x.x-r.x)+2*h.y*d*(x.y-r.y)+2*(p.x*l.x*w+p.y*l.y*d),2*p.x*w*(x.x-r.x)+2*p.y*d*(x.y-r.y)+l.x*l.x*w+l.y*l.y*d,2*l.x*w*(x.x-r.x)+2*l.y*d*(x.y-r.y),x.x*x.x*w-2*x.y*r.y*d-2*x.x*r.x*w+x.y*x.y*d+r.x*r.x*w+r.y*r.y*d-d*w).getRootsInInterval(0,1),m=0;m<v.length;m++){var g=v[m];f.points.push(h.multiply(g*g*g).add(p.multiply(g*g).add(l.multiply(g).add(x))))}return 0<f.points.length&&(f.status="Intersection"),f},nt.intersectBezier3Line=function(t,e,n,i,r,s){var o,a,y,c,u,h,p,l,x,f,d=r.min(s),w=r.max(s),v=new nt("No Intersection");o=t.multiply(-1),a=e.multiply(3),y=n.multiply(-3),c=o.add(a.add(y.add(i))),u=new tt(c.x,c.y),o=t.multiply(3),a=e.multiply(-6),y=n.multiply(3),c=o.add(a.add(y)),h=new tt(c.x,c.y),o=t.multiply(-3),a=e.multiply(3),y=o.add(a),p=new tt(y.x,y.y),l=new tt(t.x,t.y),f=new tt(r.y-s.y,s.x-r.x),x=r.x*s.y-s.x*r.y,roots=new et(f.dot(u),f.dot(h),f.dot(p),f.dot(l)+x).getRoots();for(var m=0;m<roots.length;m++){var g=roots[m];if(0<=g&&g<=1){var b=t.lerp(e,g),P=e.lerp(n,g),M=n.lerp(i,g),I=b.lerp(P,g),N=P.lerp(M,g),R=I.lerp(N,g);r.x==s.x?d.y<=R.y&&R.y<=w.y&&(v.status="Intersection",v.appendPoint(R)):r.y==s.y?d.x<=R.x&&R.x<=w.x&&(v.status="Intersection",v.appendPoint(R)):d.x<=R.x&&R.x<=w.x&&d.y<=R.y&&R.y<=w.y&&(v.status="Intersection",v.appendPoint(R))}}return v},nt.intersectBezier3Polygon=function(t,e,n,i,r){return this.intersectBezier3Polyline(t,e,n,i,s(r))},nt.intersectBezier3Polyline=function(t,e,n,i,r){for(var s=new nt("No Intersection"),o=r.length,a=0;a<o-1;a++){var y=r[a],c=r[a+1],u=nt.intersectBezier3Line(t,e,n,i,y,c);s.appendPoints(u.points)}return 0<s.points.length&&(s.status="Intersection"),s},nt.intersectBezier3Rectangle=function(t,e,n,i,r,s){var o=r.min(s),a=r.max(s),y=new T(a.x,o.y),c=new T(o.x,a.y),u=nt.intersectBezier3Line(t,e,n,i,o,y),h=nt.intersectBezier3Line(t,e,n,i,y,a),p=nt.intersectBezier3Line(t,e,n,i,a,c),l=nt.intersectBezier3Line(t,e,n,i,c,o),x=new nt("No Intersection");return x.appendPoints(u.points),x.appendPoints(h.points),x.appendPoints(p.points),x.appendPoints(l.points),0<x.points.length&&(x.status="Intersection"),x},nt.intersectCircleCircle=function(t,e,n,i){var r,s=e+i,o=Math.abs(e-i),a=t.distanceFrom(n);if(s<a)r=new nt("Outside");else if(a<o)r=new nt("Inside");else{r=new nt("Intersection");var y=(e*e-i*i+a*a)/(2*a),c=Math.sqrt(e*e-y*y),u=t.lerp(n,y/a),h=c/a;r.points.push(new T(u.x-h*(n.y-t.y),u.y+h*(n.x-t.x))),r.points.push(new T(u.x+h*(n.y-t.y),u.y-h*(n.x-t.x)))}return r},nt.intersectCircleEllipse=function(t,e,n,i,r){return nt.intersectEllipseEllipse(t,e,e,n,i,r)},nt.intersectCircleLine=function(t,e,n,i){var r,s=(i.x-n.x)*(i.x-n.x)+(i.y-n.y)*(i.y-n.y),o=2*((i.x-n.x)*(n.x-t.x)+(i.y-n.y)*(n.y-t.y)),a=o*o-4*s*(t.x*t.x+t.y*t.y+n.x*n.x+n.y*n.y-2*(t.x*n.x+t.y*n.y)-e*e);if(a<0)r=new nt("Outside");else if(0==a)r=new nt("Tangent");else{var y=Math.sqrt(a),c=(-o+y)/(2*s),u=(-o-y)/(2*s);(c<0||1<c)&&(u<0||1<u)?r=new nt(c<0&&u<0||1<c&&1<u?"Outside":"Inside"):(r=new nt("Intersection"),0<=c&&c<=1&&r.points.push(n.lerp(i,c)),0<=u&&u<=1&&r.points.push(n.lerp(i,u)))}return r},nt.intersectCirclePolygon=function(t,e,n){return this.intersectCirclePolyline(t,e,s(n))},nt.intersectCirclePolyline=function(t,e,n){for(var i,r=new nt("No Intersection"),s=n.length,o=0;o<s-1;o++){var a=n[o],y=n[o+1];i=nt.intersectCircleLine(t,e,a,y),r.appendPoints(i.points)}return 0<r.points.length?r.status="Intersection":r.status=i.status,r},nt.intersectCircleRectangle=function(t,e,n,i){var r=n.min(i),s=n.max(i),o=new T(s.x,r.y),a=new T(r.x,s.y),y=nt.intersectCircleLine(t,e,r,o),c=nt.intersectCircleLine(t,e,o,s),u=nt.intersectCircleLine(t,e,s,a),h=nt.intersectCircleLine(t,e,a,r),p=new nt("No Intersection");return p.appendPoints(y.points),p.appendPoints(c.points),p.appendPoints(u.points),p.appendPoints(h.points),0<p.points.length?p.status="Intersection":p.status=y.status,p},nt.intersectEllipseEllipse=function(t,e,n,i,r,s){for(var o=[n*n,0,e*e,-2*n*n*t.x,-2*e*e*t.y,n*n*t.x*t.x+e*e*t.y*t.y-e*e*n*n],a=[s*s,0,r*r,-2*s*s*i.x,-2*r*r*i.y,s*s*i.x*i.x+r*r*i.y*i.y-r*r*s*s],y=nt.bezout(o,a).getRoots(),c=.001*(o[0]*o[0]+2*o[1]*o[1]+o[2]*o[2]),u=.001*(a[0]*a[0]+2*a[1]*a[1]+a[2]*a[2]),h=new nt("No Intersection"),p=0;p<y.length;p++)for(var l=new et(o[0],o[3]+y[p]*o[1],o[5]+y[p]*(o[4]+y[p]*o[2])).getRoots(),x=0;x<l.length;x++){var f=(o[0]*l[x]+o[1]*y[p]+o[3])*l[x]+(o[2]*y[p]+o[4])*y[p]+o[5];Math.abs(f)<c&&(f=(a[0]*l[x]+a[1]*y[p]+a[3])*l[x]+(a[2]*y[p]+a[4])*y[p]+a[5],Math.abs(f)<u&&h.appendPoint(new T(l[x],y[p])))}return 0<h.points.length&&(h.status="Intersection"),h},nt.intersectEllipseLine=function(t,e,n,i,r){var s,o=new tt(i.x,i.y),a=tt.fromPoints(i,r),y=new tt(t.x,t.y),c=o.subtract(y),u=new tt(a.x/(e*e),a.y/(n*n)),h=new tt(c.x/(e*e),c.y/(n*n)),p=a.dot(u),l=a.dot(h),x=l*l-p*(t=c.dot(h)-1);if(x<0)s=new nt("Outside");else if(0<x){var f=Math.sqrt(x),d=(-l-f)/p,w=(-l+f)/p;(d<0||1<d)&&(w<0||1<w)?s=new nt(d<0&&w<0||1<d&&1<w?"Outside":"Inside"):(s=new nt("Intersection"),0<=d&&d<=1&&s.appendPoint(i.lerp(r,d)),0<=w&&w<=1&&s.appendPoint(i.lerp(r,w)))}else{var v=-l/p;0<=v&&v<=1?(s=new nt("Intersection")).appendPoint(i.lerp(r,v)):s=new nt("Outside")}return s},nt.intersectEllipsePolygon=function(t,e,n,i){return this.intersectEllipsePolyline(t,e,n,s(i))},nt.intersectEllipsePolyline=function(t,e,n,i){for(var r=new nt("No Intersection"),s=i.length,o=0;o<s-1;o++){var a=i[o],y=i[o+1],c=nt.intersectEllipseLine(t,e,n,a,y);r.appendPoints(c.points)}return 0<r.points.length&&(r.status="Intersection"),r},nt.intersectEllipseRectangle=function(t,e,n,i,r){var s=i.min(r),o=i.max(r),a=new T(o.x,s.y),y=new T(s.x,o.y),c=nt.intersectEllipseLine(t,e,n,s,a),u=nt.intersectEllipseLine(t,e,n,a,o),h=nt.intersectEllipseLine(t,e,n,o,y),p=nt.intersectEllipseLine(t,e,n,y,s),l=new nt("No Intersection");return l.appendPoints(c.points),l.appendPoints(u.points),l.appendPoints(h.points),l.appendPoints(p.points),0<l.points.length&&(l.status="Intersection"),l},nt.intersectLineLine=function(t,e,n,i){var r,s=(i.x-n.x)*(t.y-n.y)-(i.y-n.y)*(t.x-n.x),o=(e.x-t.x)*(t.y-n.y)-(e.y-t.y)*(t.x-n.x),a=(i.y-n.y)*(e.x-t.x)-(i.x-n.x)*(e.y-t.y);if(0!=a){var y=s/a,c=o/a;0<=y&&y<=1&&0<=c&&c<=1?(r=new nt("Intersection")).points.push(new T(t.x+y*(e.x-t.x),t.y+y*(e.y-t.y))):r=new nt("No Intersection")}else r=new nt(0==s||0==o?"Coincident":"Parallel");return r},nt.intersectLinePolygon=function(t,e,n){return this.intersectLinePolyline(t,e,s(n))},nt.intersectLinePolyline=function(t,e,n){for(var i=new nt("No Intersection"),r=n.length,s=0;s<r-1;s++){var o=n[s],a=n[s+1],y=nt.intersectLineLine(t,e,o,a);i.appendPoints(y.points)}return 0<i.points.length&&(i.status="Intersection"),i},nt.intersectLineRectangle=function(t,e,n,i){var r=n.min(i),s=n.max(i),o=new T(s.x,r.y),a=new T(r.x,s.y),y=nt.intersectLineLine(r,o,t,e),c=nt.intersectLineLine(o,s,t,e),u=nt.intersectLineLine(s,a,t,e),h=nt.intersectLineLine(a,r,t,e),p=new nt("No Intersection");return p.appendPoints(y.points),p.appendPoints(c.points),p.appendPoints(u.points),p.appendPoints(h.points),0<p.points.length&&(p.status="Intersection"),p},nt.intersectPolygonPolygon=function(t,e){return this.intersectPolylinePolyline(s(t),s(e))},nt.intersectPolygonPolyline=function(t,e){return this.intersectPolylinePolyline(s(t),e)},nt.intersectPolygonRectangle=function(t,e,n){return this.intersectPolylineRectangle(s(t),e,n)},nt.intersectPolylinePolyline=function(t,e){for(var n=new nt("No Intersection"),i=t.length,r=0;r<i-1;r++){var s=t[r],o=t[r+1],a=nt.intersectLinePolyline(s,o,e);n.appendPoints(a.points)}return 0<n.points.length&&(n.status="Intersection"),n},nt.intersectPolylineRectangle=function(t,e,n){var i=e.min(n),r=e.max(n),s=new T(r.x,i.y),o=new T(i.x,r.y),a=nt.intersectLinePolyline(i,s,t),y=nt.intersectLinePolyline(s,r,t),c=nt.intersectLinePolyline(r,o,t),u=nt.intersectLinePolyline(o,i,t),h=new nt("No Intersection");return h.appendPoints(a.points),h.appendPoints(y.points),h.appendPoints(c.points),h.appendPoints(u.points),0<h.points.length&&(h.status="Intersection"),h},nt.intersectRectangleRectangle=function(t,e,n,i){var r=t.min(e),s=t.max(e),o=new T(s.x,r.y),a=new T(r.x,s.y),y=nt.intersectLineRectangle(r,o,n,i),c=nt.intersectLineRectangle(o,s,n,i),u=nt.intersectLineRectangle(s,a,n,i),h=nt.intersectLineRectangle(a,r,n,i),p=new nt("No Intersection");return p.appendPoints(y.points),p.appendPoints(c.points),p.appendPoints(u.points),p.appendPoints(h.points),0<p.points.length&&(p.status="Intersection"),p},nt.intersectRayRay=function(t,e,n,i){var r,s=(i.x-n.x)*(t.y-n.y)-(i.y-n.y)*(t.x-n.x),o=(e.x-t.x)*(t.y-n.y)-(e.y-t.y)*(t.x-n.x),a=(i.y-n.y)*(e.x-t.x)-(i.x-n.x)*(e.y-t.y);if(0!=a){var y=s/a;(r=new nt("Intersection")).points.push(new T(t.x+y*(e.x-t.x),t.y+y*(e.y-t.y)))}else r=new nt(0==s||0==o?"Coincident":"Parallel");return r},nt.bezout=function(t,e){var n=t[0]*e[1]-e[0]*t[1],i=t[0]*e[2]-e[0]*t[2],r=t[0]*e[3]-e[0]*t[3],s=t[0]*e[4]-e[0]*t[4],o=t[0]*e[5]-e[0]*t[5],a=t[1]*e[2]-e[1]*t[2],y=t[1]*e[4]-e[1]*t[4],c=t[1]*e[5]-e[1]*t[5],u=t[2]*e[3]-e[2]*t[3],h=t[3]*e[4]-e[3]*t[4],p=t[3]*e[5]-e[3]*t[5],l=c+h,x=y-u;return new et(n*a-i*i,n*x+r*a-2*i*s,n*l+r*x-s*s-2*i*o,n*p+r*l-2*s*o,r*p-o*o)},t.exports=nt}),e(function(t){function e(t,e){this.init(t,e)}e.prototype.init=function(t,e){this.name=t,this.args=e},t.exports=e}));e(function(t){var y=n.Point2D,c=a,e={quadraticBezier:function(t,e,n,i,r,s){return new c("Bezier2",[new y(t,e),new y(n,i),new y(r,s)])},cubicBezier:function(t,e,n,i,r,s,o,a){return new c("Bezier3",[new y(t,e),new y(n,i),new y(r,s),new y(o,a)])},circle:function(t,e,n){return new c("Circle",[new y(t,e),n])},ellipse:function(t,e,n,i){return new c("Ellipse",[new y(t,e),n,i])},line:function(t,e,n,i){return new c("Line",[new y(t,e),new y(n,i)])},path:function(t){return new c("Path",t)},polygon:function(t){for(var e=[],n=0;n<t.length;n+=2)e.push(new y(t[n],t[n+1]));return new c("Polygon",[e])},polyline:function(t){for(var e=[],n=0;n<t.length;n+=2)e.push(new y(t[n],t[n+1]));return new c("Polyline",[e])},rectangle:function(t,e,n,i){return new c("Rectangle",[new y(t,e),new y(t+n,e+i)])}};t.exports=e}),e(function(t){var r=a,e={quadraticBezier:function(t,e,n){return new r("Bezier2",[t,e,n])},cubicBezier:function(t,e,n,i){return new r("Bezier3",[t,e,n,i])},circle:function(t,e){return new r("Circle",[t,e])},ellipse:function(t,e,n){return new r("Ellipse",[t,e,n])},line:function(t,e){return new r("Line",[t,e])},path:function(t){return new r("Path",[t])},polygon:function(t){return new r("Polygon",[t])},polyline:function(t){return new r("Polyline",[t])},rectangle:function(t,e){return new r("Rectangle",[t,t.add(e)])}};t.exports=e}),e(function(t){var e={pointInCircle:function(t,e,n){return Vector2D.fromPoints(e,t).length()<=n},pointInEllipse:function(t,e,n,i){var r=t.subtract(e);return r.x*r.x/(n*n)+r.y*r.y/(i*i)<=1},pointInPolyline:function(t,e){for(var n,i=e.length,r=0,s=e[0],o=1;o<=i;o++){var a=e[o%i],y=Math.min(s.y,a.y),c=Math.max(s.y,a.y),u=Math.max(s.x,a.x);s.y!=a.y&&y<t.y&&t.y<=c&&t.x<=u&&(n=(t.y-s.y)*(a.x-s.x)/(a.y-s.y)+s.x,(s.x==a.x||t.x<=n)&&r++),s=a}return r%2==1}};e.pointInPolygon=e.pointInPolyline,e.pointInRectangle=function(t,e,n){return e.x<=t.x&&t.x<n.x&&topleft.y<=t.y&&t.y<n.y},t.exports=e});function c(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):function(t,e){for(var n=Object.getOwnPropertyNames(e),i=0;i<n.length;i++){var r=n[i],s=Object.getOwnPropertyDescriptor(e,r);s&&s.configurable&&void 0===t[r]&&Object.defineProperty(t,r,s)}}(t,e))}var u=function(n){function i(t){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,i);var e=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,n.call(this,t));return e._layerName=maptalks.INTERNAL_LAYER_PREFIX+"_CDSP",e}return c(i,n),i}(maptalks.Class);u.mergeOptions({}),t.CDSP=u,Object.defineProperty(t,"__esModule",{value:!0}),"undefined"!=typeof console&&console.log("maptalks.cdsp v0.1.0-alpha.1")});